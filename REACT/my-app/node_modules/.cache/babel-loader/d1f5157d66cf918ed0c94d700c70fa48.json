{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\annap\\\\OneDrive\\\\Documentos\\\\ANNA\\\\Indwise\\\\Teste\\\\my-app\\\\src\\\\grafico.jsx\";\nimport Chart from 'react-chartjs-2';\nimport myData from \"./producao.json\";\nimport logo from \"./logo.svg\";\nimport React, { useState } from 'react';\nexport { Graph }; // Data generation\n\nfunction getRandomArray(numItems) {\n  // Create random array of objects\n  let names = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  let data = [];\n\n  for (var i = 0; i < numItems; i++) {\n    data.push({\n      label: names[i],\n      value: Math.round(20 + 80 * Math.random())\n    });\n  }\n\n  return data;\n}\n\nfunction getRandomDateArray(numItems) {\n  // Create random array of objects (with date)\n  let data = [];\n  let baseTime = new Date('2018-05-01T00:00:00').getTime();\n  let dayMs = 24 * 60 * 60 * 1000;\n\n  for (var i = 0; i < numItems; i++) {\n    data.push({\n      time: new Date(baseTime + i * dayMs),\n      value: Math.round(20 + 80 * Math.random())\n    });\n  }\n\n  return data;\n}\n\nfunction getData() {\n  let data = [];\n  data.push({\n    title: 'Visits',\n    data: getRandomDateArray(150)\n  });\n  data.push({\n    title: 'Categories',\n    data: getRandomArray(20)\n  });\n  data.push({\n    title: 'Categories',\n    data: getRandomArray(10)\n  });\n  data.push({\n    title: 'Data 4',\n    data: getRandomArray(6)\n  });\n  return data;\n} // BarChart\n\n\nclass BarChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.data.labels = this.props.data.map(d => d.label);\n    this.data.datasets[0].data = this.props.data.map(d => d.value);\n    this.update();\n  }\n\n  componentDidMount() {\n    this.myChart = new Chart(this.canvasRef.current, {\n      type: 'bar',\n      options: {\n        maintainAspectRatio: false,\n        scales: {\n          yAxes: [{\n            ticks: {\n              min: 0,\n              max: 100\n            }\n          }]\n        }\n      },\n      data: {\n        labels: this.props.data.map(d => d.label),\n        datasets: [{\n          label: this.props.title,\n          data: this.props.data.map(d => d.value),\n          backgroundColor: this.props.color\n        }]\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: this.canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this);\n  }\n\n} // LineChart\n\n\nclass LineChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.myChart.data.labels = this.props.data.map(d => d.time);\n    this.myChart.data.datasets[0].data = this.props.data.map(d => d.value);\n    this.myChart.update();\n  }\n\n  componentDidMount() {\n    this.myChart = new Chart(this.canvasRef.current, {\n      type: 'line',\n      options: {\n        maintainAspectRatio: false,\n        scales: {\n          xAxes: [{\n            type: 'time',\n            time: {\n              unit: 'week'\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              min: 0\n            }\n          }]\n        }\n      },\n      data: {\n        labels: this.props.data.map(d => d.time),\n        datasets: [{\n          label: this.props.title,\n          data: this.props.data.map(d => d.value),\n          fill: 'none',\n          backgroundColor: this.props.color,\n          pointRadius: 2,\n          borderColor: this.props.color,\n          borderWidth: 1,\n          lineTension: 0\n        }]\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: this.canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 12\n    }, this);\n  }\n\n} // Doughnut\n\n\nclass DoughnutChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.myChart.data.labels = this.props.data.map(d => d.label);\n    this.myChart.data.datasets[0].data = this.props.data.map(d => d.value);\n    this.myChart.update();\n  }\n\n  componentDidMount() {\n    this.myChart = new Chart(this.canvasRef.current, {\n      type: 'doughnut',\n      options: {\n        maintainAspectRatio: false\n      },\n      data: {\n        labels: this.props.data.map(d => d.label),\n        datasets: [{\n          data: this.props.data.map(d => d.value),\n          backgroundColor: this.props.colors\n        }]\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: this.canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 12\n    }, this);\n  }\n\n} // App\n\n\nclass Graph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: getData()\n    };\n  }\n\n  componentDidMount() {\n    window.setInterval(() => {\n      this.setState({\n        data: getData()\n      });\n    }, 5000);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main chart-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: this.state.data[0].data,\n          title: this.state.data[0].title,\n          color: \"#3E517A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sub chart-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: this.state.data[1].data,\n          title: this.state.data[1].title,\n          color: \"#70CAD1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sub chart-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(BarChart, {\n          data: this.state.data[2].data,\n          title: this.state.data[2].title,\n          color: \"#B08EA2\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sub chart-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(DoughnutChart, {\n          data: this.state.data[3].data,\n          title: this.state.data[3].title,\n          colors: ['#a8e0ff', '#8ee3f5', '#70cad1', '#3e517a', '#b08ea2', '#BBB6DF']\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/annap/OneDrive/Documentos/ANNA/Indwise/Teste/my-app/src/grafico.jsx"],"names":["Chart","myData","React","useState","Graph","getRandomArray","numItems","names","data","i","push","label","value","Math","round","random","getRandomDateArray","baseTime","Date","getTime","dayMs","time","getData","title","BarChart","Component","constructor","props","canvasRef","createRef","componentDidUpdate","labels","map","d","datasets","update","componentDidMount","myChart","current","type","options","maintainAspectRatio","scales","yAxes","ticks","min","max","backgroundColor","color","render","LineChart","xAxes","unit","fill","pointRadius","borderColor","borderWidth","lineTension","DoughnutChart","colors","state","window","setInterval","setState"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,iBAAlB;AACA,OAAOC,MAAP,MAAmB,iBAAnB;;AAEA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAAQC,KAAR,G,CAEA;;AACA,SAASC,cAAT,CAAwBC,QAAxB,EAAkC;AAChC;AACA,MAAIC,KAAK,GAAG,4BAAZ;AACA,MAAIC,IAAI,GAAG,EAAX;;AACA,OAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,QAAnB,EAA6BG,CAAC,EAA9B,EAAkC;AAChCD,IAAAA,IAAI,CAACE,IAAL,CAAU;AACRC,MAAAA,KAAK,EAAEJ,KAAK,CAACE,CAAD,CADJ;AAERG,MAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAW,KAAK,KAAKD,IAAI,CAACE,MAAL,EAArB;AAFC,KAAV;AAID;;AACD,SAAOP,IAAP;AACD;;AAED,SAASQ,kBAAT,CAA4BV,QAA5B,EAAsC;AACpC;AACA,MAAIE,IAAI,GAAG,EAAX;AACA,MAAIS,QAAQ,GAAG,IAAIC,IAAJ,CAAS,qBAAT,EAAgCC,OAAhC,EAAf;AACA,MAAIC,KAAK,GAAG,KAAK,EAAL,GAAU,EAAV,GAAe,IAA3B;;AACA,OAAI,IAAIX,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGH,QAAnB,EAA6BG,CAAC,EAA9B,EAAkC;AAChCD,IAAAA,IAAI,CAACE,IAAL,CAAU;AACRW,MAAAA,IAAI,EAAE,IAAIH,IAAJ,CAASD,QAAQ,GAAGR,CAAC,GAAGW,KAAxB,CADE;AAERR,MAAAA,KAAK,EAAEC,IAAI,CAACC,KAAL,CAAW,KAAK,KAAKD,IAAI,CAACE,MAAL,EAArB;AAFC,KAAV;AAID;;AACD,SAAOP,IAAP;AACD;;AAED,SAASc,OAAT,GAAmB;AACjB,MAAId,IAAI,GAAG,EAAX;AAEAA,EAAAA,IAAI,CAACE,IAAL,CAAU;AACRa,IAAAA,KAAK,EAAE,QADC;AAERf,IAAAA,IAAI,EAAEQ,kBAAkB,CAAC,GAAD;AAFhB,GAAV;AAKAR,EAAAA,IAAI,CAACE,IAAL,CAAU;AACRa,IAAAA,KAAK,EAAE,YADC;AAERf,IAAAA,IAAI,EAAEH,cAAc,CAAC,EAAD;AAFZ,GAAV;AAKAG,EAAAA,IAAI,CAACE,IAAL,CAAU;AACRa,IAAAA,KAAK,EAAE,YADC;AAERf,IAAAA,IAAI,EAAEH,cAAc,CAAC,EAAD;AAFZ,GAAV;AAKAG,EAAAA,IAAI,CAACE,IAAL,CAAU;AACRa,IAAAA,KAAK,EAAE,QADC;AAERf,IAAAA,IAAI,EAAEH,cAAc,CAAC,CAAD;AAFZ,GAAV;AAKA,SAAOG,IAAP;AACD,C,CAGD;;;AACA,MAAMgB,QAAN,SAAuBtB,KAAK,CAACuB,SAA7B,CAAuC;AACrCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,SAAL,gBAAiB1B,KAAK,CAAC2B,SAAN,EAAjB;AACD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,SAAKtB,IAAL,CAAUuB,MAAV,GAAmB,KAAKJ,KAAL,CAAWnB,IAAX,CAAgBwB,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACtB,KAA3B,CAAnB;AACA,SAAKH,IAAL,CAAU0B,QAAV,CAAmB,CAAnB,EAAsB1B,IAAtB,GAA6B,KAAKmB,KAAL,CAAWnB,IAAX,CAAgBwB,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACrB,KAA3B,CAA7B;AACA,SAAKuB,MAAL;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,OAAL,GAAe,IAAIrC,KAAJ,CAAU,KAAK4B,SAAL,CAAeU,OAAzB,EAAkC;AAC/CC,MAAAA,IAAI,EAAE,KADyC;AAE/CC,MAAAA,OAAO,EAAE;AACRC,QAAAA,mBAAmB,EAAE,KADb;AAEPC,QAAAA,MAAM,EAAE;AACNC,UAAAA,KAAK,EAAE,CACL;AACEC,YAAAA,KAAK,EAAE;AACLC,cAAAA,GAAG,EAAE,CADA;AAELC,cAAAA,GAAG,EAAE;AAFA;AADT,WADK;AADD;AAFD,OAFsC;AAe/CtC,MAAAA,IAAI,EAAE;AACJuB,QAAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWnB,IAAX,CAAgBwB,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACtB,KAA3B,CADJ;AAEJuB,QAAAA,QAAQ,EAAE,CAAC;AACTvB,UAAAA,KAAK,EAAE,KAAKgB,KAAL,CAAWJ,KADT;AAETf,UAAAA,IAAI,EAAE,KAAKmB,KAAL,CAAWnB,IAAX,CAAgBwB,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACrB,KAA3B,CAFG;AAGTmC,UAAAA,eAAe,EAAE,KAAKpB,KAAL,CAAWqB;AAHnB,SAAD;AAFN;AAfyC,KAAlC,CAAf;AAwBD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACI;AAAQ,MAAA,GAAG,EAAE,KAAKrB;AAAlB;AAAA;AAAA;AAAA;AAAA,YADJ;AAGD;;AA3CoC,C,CA+CvC;;;AACA,MAAMsB,SAAN,SAAwBhD,KAAK,CAACuB,SAA9B,CAAwC;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,SAAL,gBAAiB1B,KAAK,CAAC2B,SAAN,EAAjB;AACD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,SAAKO,OAAL,CAAa7B,IAAb,CAAkBuB,MAAlB,GAA2B,KAAKJ,KAAL,CAAWnB,IAAX,CAAgBwB,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACZ,IAA3B,CAA3B;AACA,SAAKgB,OAAL,CAAa7B,IAAb,CAAkB0B,QAAlB,CAA2B,CAA3B,EAA8B1B,IAA9B,GAAqC,KAAKmB,KAAL,CAAWnB,IAAX,CAAgBwB,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACrB,KAA3B,CAArC;AACA,SAAKyB,OAAL,CAAaF,MAAb;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,OAAL,GAAe,IAAIrC,KAAJ,CAAU,KAAK4B,SAAL,CAAeU,OAAzB,EAAkC;AAC/CC,MAAAA,IAAI,EAAE,MADyC;AAE/CC,MAAAA,OAAO,EAAE;AACVC,QAAAA,mBAAmB,EAAE,KADX;AAEPC,QAAAA,MAAM,EAAE;AACNS,UAAAA,KAAK,EAAE,CACL;AACEZ,YAAAA,IAAI,EAAE,MADR;AAEElB,YAAAA,IAAI,EAAE;AACJ+B,cAAAA,IAAI,EAAE;AADF;AAFR,WADK,CADD;AASNT,UAAAA,KAAK,EAAE,CACL;AACEC,YAAAA,KAAK,EAAE;AACLC,cAAAA,GAAG,EAAE;AADA;AADT,WADK;AATD;AAFD,OAFsC;AAsB/CrC,MAAAA,IAAI,EAAE;AACJuB,QAAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWnB,IAAX,CAAgBwB,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACZ,IAA3B,CADJ;AAEJa,QAAAA,QAAQ,EAAE,CAAC;AACTvB,UAAAA,KAAK,EAAE,KAAKgB,KAAL,CAAWJ,KADT;AAETf,UAAAA,IAAI,EAAE,KAAKmB,KAAL,CAAWnB,IAAX,CAAgBwB,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACrB,KAA3B,CAFG;AAGTyC,UAAAA,IAAI,EAAE,MAHG;AAITN,UAAAA,eAAe,EAAE,KAAKpB,KAAL,CAAWqB,KAJnB;AAKTM,UAAAA,WAAW,EAAE,CALJ;AAMTC,UAAAA,WAAW,EAAE,KAAK5B,KAAL,CAAWqB,KANf;AAOTQ,UAAAA,WAAW,EAAE,CAPJ;AAQTC,UAAAA,WAAW,EAAE;AARJ,SAAD;AAFN;AAtByC,KAAlC,CAAf;AAoCD;;AAEDR,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAQ,MAAA,GAAG,EAAE,KAAKrB;AAAlB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AArDqC,C,CAyDxC;;;AACA,MAAM8B,aAAN,SAA4BxD,KAAK,CAACuB,SAAlC,CAA4C;AAC1CC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,SAAL,gBAAiB1B,KAAK,CAAC2B,SAAN,EAAjB;AACD;;AAEDC,EAAAA,kBAAkB,GAAG;AACnB,SAAKO,OAAL,CAAa7B,IAAb,CAAkBuB,MAAlB,GAA2B,KAAKJ,KAAL,CAAWnB,IAAX,CAAgBwB,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACtB,KAA3B,CAA3B;AACA,SAAK0B,OAAL,CAAa7B,IAAb,CAAkB0B,QAAlB,CAA2B,CAA3B,EAA8B1B,IAA9B,GAAqC,KAAKmB,KAAL,CAAWnB,IAAX,CAAgBwB,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACrB,KAA3B,CAArC;AACA,SAAKyB,OAAL,CAAaF,MAAb;AACD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,OAAL,GAAe,IAAIrC,KAAJ,CAAU,KAAK4B,SAAL,CAAeU,OAAzB,EAAkC;AAC/CC,MAAAA,IAAI,EAAE,UADyC;AAE/CC,MAAAA,OAAO,EAAE;AACRC,QAAAA,mBAAmB,EAAE;AADb,OAFsC;AAK/CjC,MAAAA,IAAI,EAAE;AACJuB,QAAAA,MAAM,EAAE,KAAKJ,KAAL,CAAWnB,IAAX,CAAgBwB,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACtB,KAA3B,CADJ;AAEJuB,QAAAA,QAAQ,EAAE,CAAC;AACT1B,UAAAA,IAAI,EAAE,KAAKmB,KAAL,CAAWnB,IAAX,CAAgBwB,GAAhB,CAAoBC,CAAC,IAAIA,CAAC,CAACrB,KAA3B,CADG;AAETmC,UAAAA,eAAe,EAAE,KAAKpB,KAAL,CAAWgC;AAFnB,SAAD;AAFN;AALyC,KAAlC,CAAf;AAcD;;AAGDV,EAAAA,MAAM,GAAG;AACP,wBAAO;AAAQ,MAAA,GAAG,EAAE,KAAKrB;AAAlB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAhCyC,C,CAoC5C;;;AACA,MAAMxB,KAAN,SAAoBF,KAAK,CAACuB,SAA1B,CAAoC;AAClCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AAEA,SAAKiC,KAAL,GAAa;AACXpD,MAAAA,IAAI,EAAEc,OAAO;AADF,KAAb;AAGD;;AAEDc,EAAAA,iBAAiB,GAAG;AAClByB,IAAAA,MAAM,CAACC,WAAP,CAAmB,MAAM;AACvB,WAAKC,QAAL,CAAc;AACZvD,QAAAA,IAAI,EAAEc,OAAO;AADD,OAAd;AAGD,KAJD,EAIG,IAJH;AAKD;;AAED2B,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,oBAAf;AAAA,+BACE,QAAC,SAAD;AACE,UAAA,IAAI,EAAE,KAAKW,KAAL,CAAWpD,IAAX,CAAgB,CAAhB,EAAmBA,IAD3B;AAEE,UAAA,KAAK,EAAE,KAAKoD,KAAL,CAAWpD,IAAX,CAAgB,CAAhB,EAAmBe,KAF5B;AAGE,UAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,+BACE,QAAC,QAAD;AACE,UAAA,IAAI,EAAE,KAAKqC,KAAL,CAAWpD,IAAX,CAAgB,CAAhB,EAAmBA,IAD3B;AAEE,UAAA,KAAK,EAAE,KAAKoD,KAAL,CAAWpD,IAAX,CAAgB,CAAhB,EAAmBe,KAF5B;AAGE,UAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cARF,eAeE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,+BACE,QAAC,QAAD;AACE,UAAA,IAAI,EAAE,KAAKqC,KAAL,CAAWpD,IAAX,CAAgB,CAAhB,EAAmBA,IAD3B;AAEE,UAAA,KAAK,EAAE,KAAKoD,KAAL,CAAWpD,IAAX,CAAgB,CAAhB,EAAmBe,KAF5B;AAGE,UAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAfF,eAsBE;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,+BACE,QAAC,aAAD;AACE,UAAA,IAAI,EAAE,KAAKqC,KAAL,CAAWpD,IAAX,CAAgB,CAAhB,EAAmBA,IAD3B;AAEE,UAAA,KAAK,EAAE,KAAKoD,KAAL,CAAWpD,IAAX,CAAgB,CAAhB,EAAmBe,KAF5B;AAGE,UAAA,MAAM,EAAE,CAAC,SAAD,EAAY,SAAZ,EAAuB,SAAvB,EAAkC,SAAlC,EAA6C,SAA7C,EAAwD,SAAxD;AAHV;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAgCD;;AAlDiC","sourcesContent":["import Chart from 'react-chartjs-2';\r\nimport myData from \"./producao.json\";\r\nimport logo from './logo.svg';\r\nimport React, { useState } from 'react';\r\nexport {Graph}\r\n\r\n// Data generation\r\nfunction getRandomArray(numItems) {\r\n  // Create random array of objects\r\n  let names = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n  let data = [];\r\n  for(var i = 0; i < numItems; i++) {\r\n    data.push({\r\n      label: names[i],\r\n      value: Math.round(20 + 80 * Math.random())\r\n    });\r\n  }\r\n  return data;\r\n}\r\n\r\nfunction getRandomDateArray(numItems) {\r\n  // Create random array of objects (with date)\r\n  let data = [];\r\n  let baseTime = new Date('2018-05-01T00:00:00').getTime();\r\n  let dayMs = 24 * 60 * 60 * 1000;\r\n  for(var i = 0; i < numItems; i++) {\r\n    data.push({\r\n      time: new Date(baseTime + i * dayMs),\r\n      value: Math.round(20 + 80 * Math.random())\r\n    });\r\n  }\r\n  return data;\r\n}\r\n\r\nfunction getData() {\r\n  let data = [];\r\n\r\n  data.push({\r\n    title: 'Visits',\r\n    data: getRandomDateArray(150)\r\n  });\r\n\r\n  data.push({\r\n    title: 'Categories',\r\n    data: getRandomArray(20)\r\n  });\r\n\r\n  data.push({\r\n    title: 'Categories',\r\n    data: getRandomArray(10)\r\n  });\r\n\r\n  data.push({\r\n    title: 'Data 4',\r\n    data: getRandomArray(6)\r\n  });\r\n\r\n  return data;\r\n}\r\n\r\n\r\n// BarChart\r\nclass BarChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.canvasRef = React.createRef();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.data.labels = this.props.data.map(d => d.label);\r\n    this.data.datasets[0].data = this.props.data.map(d => d.value);\r\n    this.update();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.myChart = new Chart(this.canvasRef.current, {\r\n      type: 'bar',\r\n      options: {\r\n\t      maintainAspectRatio: false,\r\n        scales: {\r\n          yAxes: [\r\n            {\r\n              ticks: {\r\n                min: 0,\r\n                max: 100\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      data: {\r\n        labels: this.props.data.map(d => d.label),\r\n        datasets: [{\r\n          label: this.props.title,\r\n          data: this.props.data.map(d => d.value),\r\n          backgroundColor: this.props.color\r\n        }]\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <canvas ref={this.canvasRef} />\r\n    );\r\n  }\r\n}\r\n\r\n\r\n// LineChart\r\nclass LineChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.canvasRef = React.createRef();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.myChart.data.labels = this.props.data.map(d => d.time);\r\n    this.myChart.data.datasets[0].data = this.props.data.map(d => d.value);\r\n    this.myChart.update();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.myChart = new Chart(this.canvasRef.current, {\r\n      type: 'line',\r\n      options: {\r\n\t\t\t  maintainAspectRatio: false,\r\n        scales: {\r\n          xAxes: [\r\n            {\r\n              type: 'time',\r\n              time: {\r\n                unit: 'week'\r\n              }\r\n            }\r\n          ],\r\n          yAxes: [\r\n            {\r\n              ticks: {\r\n                min: 0\r\n              }\r\n            }\r\n          ]\r\n        }\r\n      },\r\n      data: {\r\n        labels: this.props.data.map(d => d.time),\r\n        datasets: [{\r\n          label: this.props.title,\r\n          data: this.props.data.map(d => d.value),\r\n          fill: 'none',\r\n          backgroundColor: this.props.color,\r\n          pointRadius: 2,\r\n          borderColor: this.props.color,\r\n          borderWidth: 1,\r\n          lineTension: 0\r\n        }]\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return <canvas ref={this.canvasRef} />;\r\n  }\r\n}\r\n\r\n\r\n// Doughnut\r\nclass DoughnutChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.canvasRef = React.createRef();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.myChart.data.labels = this.props.data.map(d => d.label);\r\n    this.myChart.data.datasets[0].data = this.props.data.map(d => d.value);\r\n    this.myChart.update();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.myChart = new Chart(this.canvasRef.current, {\r\n      type: 'doughnut',\r\n      options: {\r\n\t      maintainAspectRatio: false\r\n      },\r\n      data: {\r\n        labels: this.props.data.map(d => d.label),\r\n        datasets: [{\r\n          data: this.props.data.map(d => d.value),\r\n          backgroundColor: this.props.colors\r\n        }]\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n\r\n  render() {\r\n    return <canvas ref={this.canvasRef} />;\r\n  }\r\n}\r\n\r\n\r\n// App\r\nclass Graph extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      data: getData()\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.setInterval(() => {\r\n      this.setState({\r\n        data: getData()\r\n      })\r\n    }, 5000)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <div className=\"main chart-wrapper\">\r\n          <LineChart\r\n            data={this.state.data[0].data}\r\n            title={this.state.data[0].title}\r\n            color=\"#3E517A\"\r\n          />\r\n        </div>\r\n        <div className=\"sub chart-wrapper\">\r\n          <BarChart\r\n            data={this.state.data[1].data}\r\n            title={this.state.data[1].title}\r\n            color=\"#70CAD1\"\r\n          />\r\n        </div>\r\n        <div className=\"sub chart-wrapper\">\r\n          <BarChart\r\n            data={this.state.data[2].data}\r\n            title={this.state.data[2].title}\r\n            color=\"#B08EA2\"\r\n          />\r\n        </div>\r\n        <div className=\"sub chart-wrapper\">\r\n          <DoughnutChart\r\n            data={this.state.data[3].data}\r\n            title={this.state.data[3].title}\r\n            colors={['#a8e0ff', '#8ee3f5', '#70cad1', '#3e517a', '#b08ea2', '#BBB6DF']}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}