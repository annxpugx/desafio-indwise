{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\annap\\\\OneDrive\\\\Documentos\\\\ANNA\\\\Indwise\\\\Teste\\\\my-app\\\\src\\\\grafico.jsx\";\nimport Chart from 'react-chartjs-2';\nimport myData from \"./producao.json\";\nimport React, { useState } from 'react';\nChart.defaults.global.defaultFontFamily = \"Roboto, sans-serif\";\nconst labels = [\"17\", \"18\", \"19\", \"20\", \"21\", \"22\"];\n\nfunction somar() {\n  let sum = [1, 1, 1, 1, 1, 1];\n\n  for (let i = 0; i < myData.length; i++) {\n    for (let j = 0; j < labels.length; j++) {\n      if (JSON.stringify(myData[i].pt).includes(\"2016-04-\" + labels[j])) {\n        sum[j]++;\n      }\n    }\n  }\n\n  return sum;\n} // LineChart\n\n\nclass LineChart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.canvasRef = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidUpdate() {\n    this.myChart.data.labels = labels;\n    this.myChart.data.data = myData;\n    this.myChart.update();\n  }\n\n  componentDidMount() {\n    this.myChart = new Chart(this.canvasRef.current, {\n      type: 'line',\n      data: {\n        labels: labels,\n        datasets: [{\n          label: labels,\n          data: somar()\n        }]\n      },\n      options: {\n        layout: {\n          padding: {\n            left: 0,\n            right: 0,\n            top: 25,\n            bottom: 15\n          }\n        }\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: this.canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 12\n    }, this);\n  }\n\n}\n\nclass Graph extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: myData\n    };\n  }\n\n  componentDidMount() {\n    window.setInterval(() => {\n      this.setState({\n        data: myData\n      });\n    }, 5000);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Graph\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"main chart-wrapper\",\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: this.state.data.data,\n          title: this.state.data.title,\n          color: \"#3E517A\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/annap/OneDrive/Documentos/ANNA/Indwise/Teste/my-app/src/grafico.jsx"],"names":["Chart","myData","React","useState","defaults","global","defaultFontFamily","labels","somar","sum","i","length","j","JSON","stringify","pt","includes","LineChart","Component","constructor","props","canvasRef","createRef","componentDidUpdate","myChart","data","update","componentDidMount","current","type","datasets","label","options","layout","padding","left","right","top","bottom","render","Graph","state","window","setInterval","setState","title"],"mappings":"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","sourcesContent":["import Chart from 'react-chartjs-2';\r\nimport myData from \"./producao.json\";\r\nimport React, { useState } from 'react';\r\n\r\nChart.defaults.global.defaultFontFamily = \"Roboto, sans-serif\";\r\nconst labels = [\"17\", \"18\", \"19\", \"20\", \"21\", \"22\"];\r\n\r\nfunction somar() {\r\n    let sum = [1, 1, 1, 1, 1, 1];\r\n    for (let i = 0; i < myData.length; i++) {\r\n        for (let j = 0; j < labels.length; j++) {\r\n            if (JSON.stringify(myData[i].pt).includes(\"2016-04-\" + labels[j])) {\r\n                sum[j]++;\r\n            }\r\n        }\r\n    }\r\n    return sum;\r\n}\r\n\r\n// LineChart\r\nclass LineChart extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.canvasRef = React.createRef();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.myChart.data.labels = labels;\r\n    this.myChart.data.data = myData;\r\n    this.myChart.update();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.myChart = new Chart(this.canvasRef.current, {\r\n        type: 'line',\r\n            data: {\r\n                labels: labels,\r\n                datasets: [{\r\n                    label: labels,\r\n                    data: somar(),\r\n                }]\r\n            },\r\n            options: {\r\n                layout: {\r\n                    padding: {\r\n                        left: 0,\r\n                        right: 0,\r\n                        top: 25,\r\n                        bottom: 15\r\n                    }\r\n                }\r\n            }\r\n        });\r\n  }\r\n\r\n  render() {\r\n    return <canvas ref={this.canvasRef} />;\r\n  }\r\n}\r\n\r\nclass Graph extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n  \r\n      this.state = {\r\n        data: myData\r\n      };\r\n    }\r\n  \r\n    componentDidMount() {\r\n      window.setInterval(() => {\r\n        this.setState({\r\n          data: myData\r\n        })\r\n      }, 5000)\r\n    }\r\n  \r\n    render() {\r\n      return (\r\n        <div className=\"Graph\">\r\n          <div className=\"main chart-wrapper\">\r\n            <LineChart\r\n              data={this.state.data.data}\r\n              title={this.state.data.title}\r\n              color=\"#3E517A\"\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n"]},"metadata":{},"sourceType":"module"}