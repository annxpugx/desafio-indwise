{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\annap\\\\OneDrive\\\\Documentos\\\\ANNA\\\\DesafioIndwise\\\\REACT\\\\my-app\\\\src\\\\Graphs.jsx\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport { Bar, Line } from 'react-chartjs-2';\nimport myData from \"./producao.json\";\nexport { GraphSum };\nexport { GraphMean };\nexport { GraphComp };\nconst labels = ['17', '18', '19', '20', '21', '22'];\n\nfunction somar() {\n  let sum = [1, 1, 1, 1, 1, 1];\n\n  for (let i = 0; i < myData.length; i++) {\n    for (let j = 0; j < labels.length; j++) {\n      if (JSON.stringify(myData[i].pt).includes(\"2016-04-\" + labels[j])) {\n        sum[j]++;\n      }\n    }\n  }\n\n  return sum;\n}\n\nfunction media() {\n  let somaDias = somar();\n  let mean = [0, 0, 0, 0, 0, 0];\n  let s = 0;\n\n  for (let i = 0; i < labels.length; i++) {\n    let sum = 0;\n\n    for (let j = 1; j < somaDias[i]; j++) {\n      sum += myData[s++].sis;\n    }\n\n    mean[i] = sum / somaDias[i];\n  }\n\n  return mean;\n}\n\nconst graphSoma = {\n  labels: labels,\n  datasets: [{\n    label: 'Produção',\n    fill: true,\n    lineTension: 0.5,\n    backgroundColor: 'rgba(75,192,192,0.4)',\n    borderColor: 'rgba(75, 192, 192, 0.6)',\n    scaleFontColor: \"#ff0000\",\n    borderWidth: 2,\n    data: somar()\n  }],\n  options: {\n    layout: {\n      padding: {\n        left: 0,\n        right: 0,\n        top: 25,\n        bottom: 25\n      }\n    }\n  }\n};\n\nclass GraphSum extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"article\", {\n      id: \"Line\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: graphSoma,\n        height: \"400%\",\n        width: \"70%\",\n        options: {\n          maintainAspectRatio: false,\n          title: {\n            display: true,\n            text: 'PRODUÇÃO DIÁRIA',\n            fontSize: 60,\n            fontColor: 'rgba(245, 240, 228, 0.7)',\n            fontWeight: 600,\n            fontFamily: \"inherit\",\n            textTransform: 'uppercase'\n          },\n          scales: {\n            yAxes: [{\n              ticks: {\n                fontColor: 'rgba(245, 240, 228, 0.7)'\n              }\n            }],\n            xAxes: [{\n              ticks: {\n                fontColor: 'rgba(245, 240, 228, 0.7)'\n              }\n            }]\n          },\n          legend: {\n            display: true,\n            position: 'top',\n            labels: {\n              fontColor: 'rgba(245, 240, 228, 0.7)',\n              fontSize: 25,\n              fontFamily: \"inherit\"\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst graphMedia = {\n  labels: labels,\n  datasets: [{\n    label: 'Tempo inativo',\n    fill: true,\n    lineTension: 0.5,\n    backgroundColor: 'rgba(150, 74, 237, 0.4)',\n    borderColor: 'rgba(150, 74, 237, 0.6)',\n    scaleFontColor: \"#ff0000\",\n    borderWidth: 2,\n    data: media()\n  }],\n  options: {\n    layout: {\n      padding: {\n        left: 0,\n        right: 0,\n        top: 25,\n        bottom: 25\n      }\n    }\n  }\n};\n\nclass GraphMean extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"article\", {\n      id: \"Line\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: graphMedia,\n        height: \"400%\",\n        width: \"70%\",\n        options: {\n          maintainAspectRatio: false,\n          title: {\n            display: true,\n            text: 'TEMPO MÉDIO DE INATIVIDADE',\n            fontSize: 60,\n            fontColor: 'rgba(245, 240, 228, 0.7)',\n            fontWeight: 600,\n            fontFamily: \"inherit\",\n            textTransform: 'uppercase'\n          },\n          scales: {\n            yAxes: [{\n              ticks: {\n                fontColor: 'rgba(245, 240, 228, 0.7)'\n              }\n            }],\n            xAxes: [{\n              ticks: {\n                fontColor: 'rgba(245, 240, 228, 0.7)'\n              }\n            }]\n          },\n          legend: {\n            display: true,\n            position: 'top',\n            labels: {\n              fontColor: 'rgba(245, 240, 228, 0.7)',\n              fontSize: 25,\n              fontFamily: \"inherit\"\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst graphComp = {\n  labels: labels,\n  datasets: [{\n    yAxisID: 'B',\n    label: 'Tempo inativo',\n    fill: true,\n    lineTension: 0.5,\n    backgroundColor: 'rgba(150, 74, 237, 0.1)',\n    borderColor: 'rgba(150, 74, 237, 0.6)',\n    scaleFontColor: \"#ff0000\",\n    borderWidth: 2,\n    data: media()\n  }, {\n    yAxisID: 'A',\n    label: 'Produção',\n    fill: true,\n    lineTension: 0.5,\n    backgroundColor: 'rgba(75,192,192,0.1)',\n    borderColor: 'rgba(75, 192, 192, 0.6)',\n    scaleFontColor: \"#ff0000\",\n    borderWidth: 2,\n    data: somar()\n  }],\n  options: {\n    layout: {\n      padding: {\n        left: 0,\n        right: 0,\n        top: 25,\n        bottom: 25\n      }\n    }\n  }\n};\n\nclass GraphComp extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"article\", {\n      id: \"Line\",\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: graphComp,\n        height: \"400%\",\n        width: \"70%\",\n        options: {\n          maintainAspectRatio: false,\n          title: {\n            display: true,\n            text: 'COMPARAÇÃO',\n            fontSize: 40,\n            fontColor: 'rgba(245, 240, 228, 0.7)',\n            fontWeight: 600,\n            fontFamily: \"inherit\",\n            textTransform: 'uppercase'\n          },\n          scales: {\n            yAxes: [{\n              id: 'A',\n              type: 'linear',\n              position: 'right',\n              ticks: {\n                fontColor: 'rgba(75, 192, 192, 1.5)'\n              }\n            }, {\n              id: 'B',\n              type: 'linear',\n              position: 'left',\n              ticks: {\n                fontColor: 'rgba(150, 74, 237, 1)',\n                max: 8,\n                min: 0\n              }\n            }],\n            xAxes: [{\n              ticks: {\n                fontColor: 'rgba(245, 240, 228, 0.7)'\n              }\n            }]\n          },\n          legend: {\n            display: true,\n            position: 'top',\n            labels: {\n              fontColor: 'rgba(245, 240, 228, 0.7)',\n              fontSize: 25,\n              fontFamily: \"inherit\"\n            }\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["C:/Users/annap/OneDrive/Documentos/ANNA/DesafioIndwise/REACT/my-app/src/Graphs.jsx"],"names":["React","Bar","Line","myData","GraphSum","GraphMean","GraphComp","labels","somar","sum","i","length","j","JSON","stringify","pt","includes","media","somaDias","mean","s","sis","graphSoma","datasets","label","fill","lineTension","backgroundColor","borderColor","scaleFontColor","borderWidth","data","options","layout","padding","left","right","top","bottom","Component","render","maintainAspectRatio","title","display","text","fontSize","fontColor","fontWeight","fontFamily","textTransform","scales","yAxes","ticks","xAxes","legend","position","graphMedia","graphComp","yAxisID","id","type","max","min"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport logo from './logo.svg';\r\nimport {Bar, Line} from 'react-chartjs-2';\r\nimport myData from \"./producao.json\";\r\nexport {GraphSum}\r\nexport {GraphMean}\r\nexport {GraphComp}\r\n\r\nconst labels = ['17', '18', '19','20', '21', '22'];\r\n\r\nfunction somar() {\r\n    let sum = [1, 1, 1, 1, 1, 1];\r\n    for (let i = 0; i < myData.length; i++) {\r\n        for (let j = 0; j < labels.length; j++) {\r\n            if (JSON.stringify(myData[i].pt).includes(\"2016-04-\" + labels[j])) {\r\n                sum[j]++;\r\n            }\r\n        }\r\n    }\r\n    return sum;\r\n}\r\n\r\nfunction media() {\r\n  let somaDias = somar()\r\n  let mean = [0, 0, 0, 0, 0, 0];\r\n  let s = 0;\r\n\r\n  for (let i = 0; i < labels.length; i++) {\r\n      let sum = 0;\r\n      for (let j = 1; j < somaDias[i]; j++) {\r\n          sum += myData[s++].sis;\r\n      }\r\n      mean[i] = sum / somaDias[i];\r\n  }\r\n  return mean;\r\n}\r\n\r\nconst graphSoma = {\r\n  labels: labels,\r\n  datasets: [\r\n    {\r\n      label: 'Produção',\r\n      fill: true,\r\n      lineTension: 0.5,\r\n      backgroundColor: 'rgba(75,192,192,0.4)',\r\n      borderColor: 'rgba(75, 192, 192, 0.6)',\r\n      scaleFontColor: \"#ff0000\",\r\n      borderWidth: 2,\r\n      data: somar()\r\n    }\r\n  ],\r\n    options: {\r\n        layout: {\r\n            padding: {\r\n                left: 0,\r\n                right: 0,\r\n                top: 25,\r\n                bottom: 25\r\n            }\r\n        }\r\n    },\r\n}\r\n\r\nclass GraphSum extends React.Component {\r\n  render() {\r\n    return (\r\n      <article id=\"Line\">\r\n        <Line\r\n          data={graphSoma}\r\n          height={\"400%\"}\r\n          width={\"70%\"}\r\n          options = {{\r\n            maintainAspectRatio : false,\r\n            title:{\r\n              display: true,\r\n              text:'PRODUÇÃO DIÁRIA',\r\n              fontSize:60,\r\n              fontColor:'rgba(245, 240, 228, 0.7)',\r\n              fontWeight: 600,\r\n              fontFamily: \"inherit\", \r\n              textTransform: 'uppercase'\r\n            },\r\n            scales: {\r\n              yAxes: [{\r\n                ticks: {\r\n                  fontColor: 'rgba(245, 240, 228, 0.7)'\r\n                }\r\n                \r\n              }],\r\n              xAxes: [{\r\n                ticks: {\r\n                  fontColor: 'rgba(245, 240, 228, 0.7)'\r\n                }\r\n                \r\n              }]\r\n            },\r\n            legend:{\r\n              display:true,\r\n              position:'top',\r\n              labels: {\r\n                fontColor: 'rgba(245, 240, 228, 0.7)',\r\n                fontSize: 25,    \r\n                fontFamily: \"inherit\"\r\n              }\r\n            }\r\n          }}\r\n        />\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nconst graphMedia = {\r\n  labels: labels,\r\n  datasets: [\r\n    {\r\n      label: 'Tempo inativo',\r\n      fill: true,\r\n      lineTension: 0.5,\r\n      backgroundColor: 'rgba(150, 74, 237, 0.4)',\r\n      borderColor: 'rgba(150, 74, 237, 0.6)',\r\n      scaleFontColor: \"#ff0000\",\r\n      borderWidth: 2,\r\n      data: media()\r\n    }\r\n  ],\r\n    options: {\r\n        layout: {\r\n            padding: {\r\n                left: 0,\r\n                right: 0,\r\n                top: 25,\r\n                bottom: 25\r\n            }\r\n        }\r\n    },\r\n}\r\n\r\nclass GraphMean extends React.Component {\r\n  render() {\r\n    return (\r\n      <article id=\"Line\">\r\n        <Line\r\n          data={graphMedia}\r\n          height={\"400%\"}\r\n          width={\"70%\"}\r\n          options = {{\r\n            maintainAspectRatio : false,\r\n            title:{\r\n              display: true,\r\n              text:'TEMPO MÉDIO DE INATIVIDADE',\r\n              fontSize:60,\r\n              fontColor:'rgba(245, 240, 228, 0.7)',\r\n              fontWeight: 600,\r\n              fontFamily: \"inherit\", \r\n              textTransform: 'uppercase'\r\n            },\r\n            scales: {\r\n              yAxes: [{\r\n                ticks: {\r\n                  fontColor: 'rgba(245, 240, 228, 0.7)'\r\n                }\r\n                \r\n              }],\r\n              xAxes: [{\r\n                ticks: {\r\n                  fontColor: 'rgba(245, 240, 228, 0.7)'\r\n                }\r\n                \r\n              }]\r\n            },\r\n            legend:{\r\n              display:true,\r\n              position:'top',\r\n              labels: {\r\n                fontColor: 'rgba(245, 240, 228, 0.7)',\r\n                fontSize: 25,    \r\n                fontFamily: \"inherit\"\r\n              }\r\n            }\r\n          }}\r\n        />\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nconst graphComp = {\r\n  labels: labels,\r\n  datasets: [\r\n    {\r\n      yAxisID: 'B',\r\n      label: 'Tempo inativo',\r\n      fill: true,\r\n      lineTension: 0.5,\r\n      backgroundColor: 'rgba(150, 74, 237, 0.1)',\r\n      borderColor: 'rgba(150, 74, 237, 0.6)',\r\n      scaleFontColor: \"#ff0000\",\r\n      borderWidth: 2,\r\n      data: media()\r\n    },\r\n    {\r\n      yAxisID: 'A',\r\n      label: 'Produção',\r\n      fill: true,\r\n      lineTension: 0.5,\r\n      backgroundColor: 'rgba(75,192,192,0.1)',\r\n      borderColor: 'rgba(75, 192, 192, 0.6)',\r\n      scaleFontColor: \"#ff0000\",\r\n      borderWidth: 2,\r\n      data: somar() \r\n    }\r\n  ],\r\n    options: {\r\n        layout: {\r\n            padding: {\r\n                left: 0,\r\n                right: 0,\r\n                top: 25,\r\n                bottom: 25\r\n            }\r\n        }\r\n    },\r\n}\r\n\r\nclass GraphComp extends React.Component {\r\n  render() {\r\n    return (\r\n      <article id=\"Line\">\r\n        <Line\r\n          data={graphComp}\r\n          height={\"400%\"}\r\n          width={\"70%\"}\r\n          options = {{\r\n            maintainAspectRatio : false,\r\n            title:{\r\n              display: true,\r\n              text:'COMPARAÇÃO',\r\n              fontSize:40,\r\n              fontColor:'rgba(245, 240, 228, 0.7)',\r\n              fontWeight: 600,\r\n              fontFamily: \"inherit\", \r\n              textTransform: 'uppercase'\r\n            },\r\n            scales: {\r\n              yAxes: [{\r\n                id: 'A',\r\n                type: 'linear',\r\n                position: 'right',\r\n                ticks: {\r\n                  fontColor: 'rgba(75, 192, 192, 1.5)'\r\n                }},\r\n                {\r\n                  id: 'B',\r\n                  type: 'linear',\r\n                  position: 'left', \r\n                  ticks: {\r\n                    fontColor: 'rgba(150, 74, 237, 1)',\r\n                    max: 8,\r\n                    min: 0\r\n                  },\r\n                }],\r\n              xAxes: [{\r\n                ticks: {\r\n                  fontColor: 'rgba(245, 240, 228, 0.7)'\r\n                }\r\n              }]\r\n            },\r\n            legend:{\r\n              display:true,\r\n              position:'top',\r\n              labels: {\r\n                fontColor: 'rgba(245, 240, 228, 0.7)',\r\n                fontSize: 25,    \r\n                fontFamily: \"inherit\"\r\n              }\r\n            }\r\n          }}\r\n        />\r\n      </article>\r\n    );\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}